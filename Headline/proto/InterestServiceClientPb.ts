/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: proto/interest/interest.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_interest_interest_pb from './interest_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class InterestServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorAddInterests = new grpcWeb.MethodDescriptor(
    '/InterestService/AddInterests',
    grpcWeb.MethodType.UNARY,
    proto_interest_interest_pb.AddInterestsRequest,
    proto_interest_interest_pb.InterestResponse,
    (request: proto_interest_interest_pb.AddInterestsRequest) => {
      return request.serializeBinary();
    },
    proto_interest_interest_pb.InterestResponse.deserializeBinary
  );

  addInterests(
    request: proto_interest_interest_pb.AddInterestsRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_interest_interest_pb.InterestResponse>;

  addInterests(
    request: proto_interest_interest_pb.AddInterestsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_interest_interest_pb.InterestResponse) => void): grpcWeb.ClientReadableStream<proto_interest_interest_pb.InterestResponse>;

  addInterests(
    request: proto_interest_interest_pb.AddInterestsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_interest_interest_pb.InterestResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/InterestService/AddInterests',
        request,
        metadata || {},
        this.methodDescriptorAddInterests,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/InterestService/AddInterests',
    request,
    metadata || {},
    this.methodDescriptorAddInterests);
  }

  methodDescriptorDeleteInterests = new grpcWeb.MethodDescriptor(
    '/InterestService/DeleteInterests',
    grpcWeb.MethodType.UNARY,
    proto_interest_interest_pb.DeleteInterestsRequest,
    google_protobuf_empty_pb.Empty,
    (request: proto_interest_interest_pb.DeleteInterestsRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  deleteInterests(
    request: proto_interest_interest_pb.DeleteInterestsRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  deleteInterests(
    request: proto_interest_interest_pb.DeleteInterestsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  deleteInterests(
    request: proto_interest_interest_pb.DeleteInterestsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/InterestService/DeleteInterests',
        request,
        metadata || {},
        this.methodDescriptorDeleteInterests,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/InterestService/DeleteInterests',
    request,
    metadata || {},
    this.methodDescriptorDeleteInterests);
  }

  methodDescriptorGetInterests = new grpcWeb.MethodDescriptor(
    '/InterestService/GetInterests',
    grpcWeb.MethodType.UNARY,
    proto_interest_interest_pb.GetInterestsRequest,
    proto_interest_interest_pb.InterestResponse,
    (request: proto_interest_interest_pb.GetInterestsRequest) => {
      return request.serializeBinary();
    },
    proto_interest_interest_pb.InterestResponse.deserializeBinary
  );

  getInterests(
    request: proto_interest_interest_pb.GetInterestsRequest,
    metadata: grpcWeb.Metadata | null): Promise<proto_interest_interest_pb.InterestResponse>;

  getInterests(
    request: proto_interest_interest_pb.GetInterestsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_interest_interest_pb.InterestResponse) => void): grpcWeb.ClientReadableStream<proto_interest_interest_pb.InterestResponse>;

  getInterests(
    request: proto_interest_interest_pb.GetInterestsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_interest_interest_pb.InterestResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/InterestService/GetInterests',
        request,
        metadata || {},
        this.methodDescriptorGetInterests,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/InterestService/GetInterests',
    request,
    metadata || {},
    this.methodDescriptorGetInterests);
  }

}

